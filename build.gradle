plugins {
    id 'java'
}

apply plugin: 'application'

application {
    mainClassName = 'MusicThread'
    description = "Thread example to play a wav file"
}

description = "Music Publisher Subscriber"

repositories {
    mavenCentral()
    flatDir {
        name = 'libs dir'
        dir file('lib')  
    }
}

dependencies {
    implementation files('lib/MusicGui.jar')
    compile group: 'org.apache.activemq', name: 'activemq-all', version: '5.15.8'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8'
}

def topicName = 'MyTopic'
def identifier = 'default'
def password = 'default'
def clientName = 'Music'

task arguments {
    if (project.hasProperty("topicName")) {
        topicName = project.getProperty("topicName")
    }
    if (project.hasProperty("identifier")) {
        identifier = project.getProperty("identifier")
    }
    if (project.hasProperty("password")) {
        password = project.getProperty("password")
    }
    if (project.hasProperty("clientName")) {
        clientName = project.getProperty("clientName")
    }
}

task MusicThread(type: JavaExec) {
    dependsOn arguments

    description 'Run music data publisher'

    classpath = sourceSets.main.runtimeClasspath

    main = 'MusicThread'
    standardInput = System.in

    args topicName
    if(project.hasProperty("identifier")){
        args(project.getProperty('identifier'));
    }
    else{
        args identifier
    }
    args password
    args clientName
}

task Subscriber(type: JavaExec) {
    dependsOn arguments

    description 'Subscribe to Music Rankings'

    classpath = sourceSets.main.runtimeClasspath

    main = 'Subscriber'
    standardInput = System.in

    args topicName
    if(project.hasProperty("identifier")){
        args(project.getProperty('identifier'));
    }
    else{
        args identifier
    }
    args password
    args clientName
}